# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

defmodule Problem2 do
  def fib(next, seq, sum) when next > 4_000_000 do
    sum
  end
  
  def fib(next, seq, sum) do
    [first | tail] = seq
    [second | _] = tail
    to_add = first + second
    new_seq = [to_add | seq]

    cond do
      is_even(to_add) -> new_sum = sum + to_add
      true -> new_sum = sum
    end

    fib(to_add + first, new_seq, new_sum)
  end

  defp is_even(n) do
    cond do
      rem(n, 2) == 0 -> true
      true -> false
    end
  end
end

IO.puts Problem2.fib(2, [1, 1, 0], 0)
